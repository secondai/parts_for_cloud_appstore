{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "8a1aec75-e403-4e69-84ad-da2fa3652758",
    "code": "(()=>{\n  \n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      // simple multi-page: INPUT.data.req.path\n      \n      // A modern toolbox for the internet DIYer\n      \n\n// &nbsp;\n\n// #### Alpha Walkthru Video \n\n// <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ms5CQfdc94M\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n  \n// ----\n\n// \"Modern\" Toolbox sounds better? \n\nlet md = `\n\n### Second \n##### Toolbox for DIYers \n\nSome things you can easily do: \n- set up a simple Markdown webpage \n- process webhooks from a remote service  \n- create a personal bookmark list  \n- run tasks at a certain time of day  \n- control a Raspberry Pi  \n\n\nCreating new apps for others used to be easy (\"just view-source!\", and all \"apps\" were equal. Today, the bar for quality is much higher, and creating apps can be exhausting for new developers. \n\nSecond is a platform to help you quickly build, deploy, and share personalized tools and apps. By making data sharing smoother, we're hoping to help everyone benefit from shared knowledge and technological advances. \n\n\n<a class=\"button is-info\" href=\"/toolbox\">Visit Toolbox</a>\n&nbsp;\n<a class=\"button is-default\" href=\"/cloud\">Launch New Personal Second</a>\n\n\n---- \n\n\n#### More Information  \n\nSee the [technical roadmap](/about#technical-roadmap), [contact us](/about#contact), or [launch your own Second](/launch).  \n\n&nbsp;\n&nbsp;\n\n\n`\n      try {\n        \n        let marked = universe.require('marked');\n        htmlFromMd = marked(md);\n        \n        \n      }catch(err){\n        // marked doesn't exist yet \n        // - requires installation! \n        // - TODO: move to \"dependencies\" on code, install at runtime \n        \n        if(universe.checkPackage('marked').errorInstalling){\n          htmlFromMd = 'FAILED installing package!';\n        } else {\n          htmlFromMd = 'Please wait while packages are installed';\n          \n          (async function(){\n            let installed = await universe.installPackage('marked');\n            if(installed){\n              console.log('Installed!');\n            } else {\n              console.log('Failed installation');\n            }\n          })()\n          \n        }\n      }\n      \n      \n      \n      let page = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <title>Second Homepage</title>\n            \n            <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\">\n            \n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css\" />\n            \n            <style>\n              .container {\n                max-width: 960px;\n              }\n            </style>\n            \n          </head>\n          <body>\n            \n            <div class=\"container\">\n              <br />\n              <div class=\"links\">\n                <a href=\"/\">Home</a>\n                &nbsp;|&nbsp;\n                <a href=\"/about\">About</a>\n                &nbsp;|&nbsp;\n                <a href=\"/developers\">Developers</a>\n                &nbsp;|&nbsp;\n                <a href=\"/appstore\">Store</a>\n              </div>\n              <hr />\n            </div>\n            \n            <div class=\"container\">\n              <div class=\"content\">\n                ${htmlFromMd}\n              </div>\n            </div>\n            \n          </body>\n        </html>\n      `;\n\n      await universe.httpResponse('send', page); //page.replace(new RegExp(\"\\\\n\", 'g'), \"\\\\n\"));\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}