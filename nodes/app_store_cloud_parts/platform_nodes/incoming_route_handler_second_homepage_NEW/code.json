{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "8a1aec75-e403-4e69-84ad-da2fa3652758",
    "code": "(()=>{\n  \n  return new Promise(async (resolve, reject)=>{\n    try {\n      \nlet md = `\n\nPersonal Internet Gateway \n\nWe're building a \"personal AI\" for every individual and business. An AI that you can trust to store your data, manage your relationships, interact with others, and guard your interests. \n\nTrust is earned, so your AI is completely open. \n\n### Second \n##### An intelligent intermediary for hobbyists\n\n- Create your own searchable database of apps  \n- Schedule apps to run in the future, repeatedly, or when triggered  \n- Easily deploy apps to any of your devices, or to the cloud  \n- Customize literally anything (self-hosted)  \n\nNo local install required; everything runs in the cloud, on your own servers (no technical knowledge required). \n\n\n---- \n\n\n#### More Information  \n\nSee the [technical roadmap](/about#technical-roadmap), [contact us](/about#contact), or [launch your own Second](/launch).  \n\n&nbsp;\n&nbsp;\n`;\n\n      // It's like a beautiful soup of Wordpress, Facebook, Alexa, Google, and Windows, without all the spying on you and selling your data. \n      \n      \n      // Load partial\n      let headerHtml = '';\n      try {\n        let partialNodes = await universe.searchMemory({\n          cache: 'html_partials_header',\n          filter: {\n            sqlFilter: {\n              // nodeId: null // OLD: root-level\n              type: 'html_partial:Qmslfkj299023fjfs',\n              data: {\n                key: 'header'\n              }\n            },\n          }\n        });\n        let headerHtmlCodeNode = partialNodes[0].nodes.find(node=>{return node.type == 'code:0.0.1:local:32498h32f2'});\n        let htmlResultNode = await universe.runNodeCodeInVM({\n          codeNode: headerHtmlCodeNode,\n          dataNode: {}\n        });\n        headerHtml = htmlResultNode.data.html;\n      }catch(err){\n        console.error('Failed partial:', err);\n      }\n\n      try {\n        \n        let marked = universe.require('marked');\n        htmlFromMd = marked(md);\n        \n        \n      }catch(err){\n        // marked doesn't exist yet \n        // - requires installation! \n        // - TODO: move to \"dependencies\" on code, install at runtime \n        \n        if(universe.checkPackage('marked').errorInstalling){\n          htmlFromMd = 'FAILED installing package!';\n        } else {\n          htmlFromMd = 'Please wait while packages are installed';\n          \n          (async function(){\n            let installed = await universe.installPackage('marked');\n            if(installed){\n              console.log('Installed!');\n            } else {\n              console.log('Failed installation');\n            }\n          })()\n          \n        }\n      }\n      \n      \n      let page = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <title>Second</title>\n            \n            <link rel=\"icon\" href=\"/favicon.ico\" type=\"image/x-icon\">\n            \n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.1/css/bulma.min.css\" />\n            \n            <style>\n              .container {\n                max-width: 960px;\n              }\n            </style>\n            \n          </head>\n          <body>\n            <section class=\"hero is-dark is-fullheight\">\n              \n              <div class=\"hero-head\">\n                <nav class=\"navbar\">\n                  <div class=\"container\">\n                    &nbsp;\n                  </div>\n                </nav>\n              </div>\n            \n              \n              \n              <div class=\"hero-body\">\n                <div class=\"container\">\n                  <div class=\"columns\">\n                    <div class=\"column is-half\">\n                    \n                      <h1 class=\"title is-2\">\n                        Second\n                      </h1>\n                      <h2 class=\"subtitle\">\n                        Personal Command and Control Center\n                        <br />\n                        in the cloud, and on your devices\n                      </h2>\n                      <p>\n                        Second is a mix of social network and smart assistant; it stores all your data, manages all your connections (friends, devices, etc), and makes it easy to control everything using custom interfaces (voice, text, GUI). \n                        <!--\n                        \n                        your personal cloud Second coordinates your apps, IoT devices, data, and services, giving you full and intuitive control over what you see and share. \n                        \n                        <br />\n                        <br />\n                        Apps written for Second can be shared, deployed, and discovered instantly. \n                        <br />\n                        Instead of you learning how to use new interfaces, apps adapt to you. \n                        <br />\n                        Imagine a world where you control every interface and every device you interact with. \n                        <br />\n                        <br />\n                        Built to handle user interfaces, data, and complex situations\n                        <br />\n                        You can trust your Second to serve only you and handle anything you need. \n                        <br />\n                        private, intelligent intermediary for communication.\n                        -->\n                      </p>\n                      <br />\n                      <!-- \n                      <p>\n                        Enoy your experience, don't just be a frustrated passenger.\n                      </p>\n                      <br />\n                      -->\n                      <br />\n                       \n                      <!--\n                      <p>\n                        <div class=\"button is-white is-outlined\">\n                          Get Started\n                        </div>\n                      </p>\n                      <!--\n                      <br />\n                      <p>\n                        <small>\n                        Licenses: \n                        <br />\n                        Personal/Individual:  $5/yr\n                        <br />\n                        Business/Commercial: $100/yr</small>\n                      </p>\n                      -->\n                      \n                    </div>\n                    <div class=\"column is-offset-1 is-5\">\n                      <h2 class=\"subtitle is-5\">\n                        <!--\n                        <br />\n                        <br />\n                        <br />\n                        <br />\n                        + Wordpress \n                        <br />\n                        + Facebook \n                        <br />\n                        + Alexa \n                        <br />\n                        - spying on me \n                        <br />\n                        - selling my data \n                        <br />\n                        -----------------\n                        <br />\n                        = Second\n                        \n                        <br />\n                        <br />\n                        -->\n                        \n                      </h2>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            \n              \n              <div class=\"hero-foot\">\n                <nav class=\"tabs\">\n                  <div class=\"container\">\n                    &nbsp;\n                  </div>\n                </nav>\n              </div>\n            </section>\n            \n          </body>\n        </html>\n      `;\n\n      await universe.httpResponse('send', page); //page.replace(new RegExp(\"\\\\n\", 'g'), \"\\\\n\"));\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}