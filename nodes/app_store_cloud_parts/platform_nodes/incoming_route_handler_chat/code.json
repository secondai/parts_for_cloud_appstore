{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "8a1aec75-e403-4e69-84ad-da2fa3652758",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--incoming_route_handler: Chat--');\n    \n      let page = `\n        <!DOCTYPE html>\n        <html>\n          <head>\n            <meta charset=\"utf-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n            <title>Company Chat App</title>\n              \n            <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n            <link href=\"https://fonts.googleapis.com/css?family=Inconsolata\" rel=\"stylesheet\">\n        \n            <script src=\"https://unpkg.com/ipfs/dist/index.min.js\"></script>\n            \n            <link href=\"https://browserapp.getasecond.com/css/main.css?_=${Date.now()}\" rel=\"stylesheet\">\n            <!-- <link href=\"https://browserapp.getasecond.com/static/css/main.53760f28.css\" rel=\"stylesheet\">-->\n            \n            <script defer src=\"https://use.fontawesome.com/releases/v5.0.7/js/all.js\"></script>\n            \n          </head>\n          <body>\n            <div id=\"root\"></div>\n            <!-- Supply platform to load -->\n            <!-- Supply environment to load into platform (.zip, github link, or internal app) -->\n            <script type=\"text/javascript\">\n              window.limitedToAppName = 'Chat';\n              window.useLastOfAppId = 'chat';\n              window.limitedToAppZip = 'https://github.com/secondai/app_chat';\n              window.limitedToAppVersion = 1; \n              window.disallowAutoLaunchCancel = true; // should prevent the \"Startup...\" from even showing...\n              window.startupDelay = 1;\n            </script>\n            <script type=\"text/javascript\" src=\"https://getasecond.com/cdn/defaultplatform/0.1.0/main.js?_=9\"></script>\n          </body>\n        </html>\n      `;\n\n      await universe.httpResponse('send', page);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}